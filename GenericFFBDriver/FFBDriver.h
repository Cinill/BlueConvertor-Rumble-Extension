#pragma once

#include "initguid.h"
#include "stdafx.h"

#include "Registrar.h"
#include "ComBase.h"

// {86062e00-25f2-11ef-8003-444553540000}
_declspec(selectany) GUID CLSID_FFBDriver = 
	{ 0x86062e00, 0x25f2, 0x11ef, { 0x80, 0x03, 0x44, 0x45, 0x53, 0x54, 0x00, 0x00 } };

//IID_IDirectInputEffectDriver

class FFBDriver
	: public CComBase<>, public InterfaceImpl<IDirectInputEffectDriver>
{
public:
	FFBDriver();
	~FFBDriver();

	STDMETHODIMP FFBDriver::QueryInterface(REFIID riid, LPVOID *ppv);

	HRESULT STDMETHODCALLTYPE DeviceID(DWORD, DWORD, DWORD, DWORD, LPVOID);
	HRESULT STDMETHODCALLTYPE GetVersions(LPDIDRIVERVERSIONS);
	HRESULT STDMETHODCALLTYPE Escape(DWORD, DWORD, LPDIEFFESCAPE);
	HRESULT STDMETHODCALLTYPE SetGain(DWORD, DWORD);
	HRESULT STDMETHODCALLTYPE SendForceFeedbackCommand(DWORD, DWORD);
	HRESULT STDMETHODCALLTYPE GetForceFeedbackState(DWORD, LPDIDEVICESTATE);
	HRESULT STDMETHODCALLTYPE DownloadEffect(DWORD, DWORD, LPDWORD, LPCDIEFFECT, DWORD);
	HRESULT STDMETHODCALLTYPE DestroyEffect(DWORD, DWORD);
	HRESULT STDMETHODCALLTYPE StartEffect(DWORD, DWORD, DWORD, DWORD);
	HRESULT STDMETHODCALLTYPE StopEffect(DWORD, DWORD);
	HRESULT STDMETHODCALLTYPE GetEffectStatus(DWORD, DWORD, LPDWORD);
};

